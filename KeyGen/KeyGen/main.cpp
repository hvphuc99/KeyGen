#include <iostream>
using namespace std;
#include <string>
#include <stdlib.h>

int EAX1014(string data, int arg) {
	//Lay 4 bit dau
	string f4_bit(data);
	f4_bit = f4_bit.substr(0, 4);
	string s4_bit(data);
	s4_bit = s4_bit.substr(4, 4);
	
	 int numX = *(int *)(f4_bit.c_str());
	 int numY = *(int *)(s4_bit.c_str());

	return ((numX * 24001) % 22027 + (numY * 21661) % 20897) % arg;
}

bool isEqual23(int  x, int y, int arr[]) {
	if (arr[37 * x + y] == 23) {
		return true;
	}
	return false;
}

void findKey(int x, int y, int arr[], string key) {
	if (37 * x + y == 1151) {
		cout << key;
		return;
	}
	if (!isEqual23(x - 1, y, arr)) {
		findKey(x - 1, y, arr, key + 'l');
	}
	if (!isEqual23(x, y + 1, arr)) {
		findKey(x, y + 1, arr, key + 'd');
	}
}

void main()
{
	int x = EAX1014("12345", 14);
	/*int arr[] = {};
	int x = 22;
	int y = 25;
	string key;
	findKey(x, y, arr, key);*/

	system("pause");
}